# # This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# # For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

# name: Node.js CI

on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install dependencies
        run: CI=false npm ci
      - name: Run tests
        run: CI=false npm test
  build:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: 'npm'
      - name: Install dependencies
        run: CI=false npm ci
      - name: Build the project
        run: CI=false npm run build --if-present
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: ./build
  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: build
          path: ./build
      - name: Deploy production to Netlify
        uses: South-Paw/action-netlify-deploy@v1.2.0
        with:
          github-token: ${{ secrets.NETLIFY_GITHUB_TOKEN }}
          netlify-auth-token: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          netlify-site-id: ${{ secrets.NETLIFY_SITE_ID }}
          build-dir: './build'
          comment-on-commit: true
        env:
          REACT_APP_PROD_URL: ${{ secrets.REACT_APP_PROD_URL }}